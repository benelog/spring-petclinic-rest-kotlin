/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.6.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.springframework.samples.petclinic.rest.api

import io.swagger.v3.oas.annotations.*
import io.swagger.v3.oas.annotations.enums.*
import io.swagger.v3.oas.annotations.media.*
import io.swagger.v3.oas.annotations.responses.*
import io.swagger.v3.oas.annotations.security.*
import jakarta.validation.Valid
import org.springframework.http.HttpStatus
import org.springframework.http.ResponseEntity
import org.springframework.samples.petclinic.rest.dto.RestErrorDto
import org.springframework.samples.petclinic.rest.dto.UserDto
import org.springframework.validation.annotation.Validated
import org.springframework.web.bind.annotation.*

@Validated
@RequestMapping("\${api.base-path:/petclinic/api}")
interface UsersApi {

    @Operation(
        summary = "Create a user",
        operationId = "addUser",
        description = """Creates a user.""",
        responses = [
            ApiResponse(
                responseCode = "200",
                description = "User created successfully.",
                content = [Content(schema = Schema(implementation = UserDto::class))]
            ),
            ApiResponse(responseCode = "304", description = "Not modified."),
            ApiResponse(
                responseCode = "400",
                description = "Bad request.",
                content = [Content(schema = Schema(implementation = RestErrorDto::class))]
            ),
            ApiResponse(
                responseCode = "404",
                description = "User not found.",
                content = [Content(schema = Schema(implementation = RestErrorDto::class))]
            ),
            ApiResponse(
                responseCode = "500",
                description = "Server error.",
                content = [Content(schema = Schema(implementation = RestErrorDto::class))]
            )
        ]
    )
    @RequestMapping(
        method = [RequestMethod.POST],
        value = ["/users"],
        produces = ["application/json"],
        consumes = ["application/json"]
    )
    fun addUser(
        @Parameter(
            description = "The user",
            required = true
        ) @Valid @RequestBody userDto: UserDto
    ): ResponseEntity<UserDto> {
        return ResponseEntity(HttpStatus.NOT_IMPLEMENTED)
    }
}
